<?php
namespace Training2\Specific404Page\Controller;

use Magento\Cms\Model\PageFactory;
use Magento\Framework\App\RequestInterface as Request;
use Magento\Framework\App\Response\RedirectInterface;
use Magento\Framework\Controller\Result\RedirectFactory;

class NoRouteHandler implements \Magento\Framework\App\Router\NoRouteHandlerInterface
{
	/**
     * @param Request $request
     * @return bool
     */
    // public function process(Request $request)
    // {
    //     $pathInfo = $request->getPathInfo();
    //     $parts = explode('/', trim($pathInfo, '/'));

    //     $moduleName = isset($parts[0]) ? $parts[0] : '';
    //     $actionPath = isset($parts[1]) ? $parts[1] : '';
    //     $actionName = isset($parts[2]) ? $parts[2] : '';

    //     if ($moduleName == 'catalog' && $actionPath == 'product' && $actionName == 'view') {
    //         $request->setModuleName('notfoundpage')
    //                 ->setControllerName('noroute')
    //                 ->setActionName('product');
    //     } elseif ($moduleName == 'catalog' && $actionPath == 'category' && $actionName == 'view') {
    //         $request->setModuleName('notfoundpage')
    //                 ->setControllerName('noroute')
    //                 ->setActionName('category');        	
    //     } else {
    //         $request->setModuleName('notfoundpage')
    //             ->setControllerName('noroute')
    //             ->setActionName('other');
    //     }
    //     return false;
    // }
    private $request;
    private $pageFactory;
    private $redirectFactory;
    private $redirect;

    public function __constructor(Request $request, PageFactory $pageFactory, RedirectFactory $redirectFactory, RedirectInterface $redirect)
    {
        $this->request = $request;
        $this->pageFactory = $pageFactory;
        $this->redirectFactory = $redirectFactory;    
        $this->redirect = $redirect;
    }
//
//	private function setUrl($moduleName, $controllerName, $actionName)
//	{
//        $this->request
//			->setModuleName($moduleName)
//			->setControllerName($controllerName)
//			->setActionName($actionName);
//	}

    // private function isUrl($moduleName, $controllerName, $actionName) {
    //     if ($this->request->getModuleName() == $moduleName
    //             && $this->request->getControllerName() ==  $controllerName
    //             && $this->request->getActionName() == $actionName) {
    //         return true;
    //     }
    //     return false;
    // }

    // private function getRedirectResult($path)
    // {
    //     $redirect = $this->redirectFactory->create();
    //     $redirect->setUrl($path);
    //     // $redirect->setPath($path);
    //     return $redirect;
    // }

	public function process(Request $request)
	{
		// A not-found product (catalog/product/view/id/_ID_)
		// A category (catalog/category/view/id/_ID_)
		// Another page
		//$pages = array('product' => array('moduleName' , );
		
        if ($request->getModuleName() == 'catalog'
                && $request->getControllerName() ==  'product'
                && $request->getActionName() == 'view') {
            // $request
            //     ->setModuleName('product-not-found')
            //     ->setControllerName('index')
            //     ->setActionName('index');
            // $this->redirect('product-not-found');
            // return $this->getRedirectResult('product-not-found');
            $RedirectUrl= $this->_url->getUrl('product-not-found');
            return $this->responseFactory->create()->setRedirect($RedirectUrl)->sendResponse();
            //return $this->redirectFactory->create()->setUrl('product-not-found');
        }

		// if($this->isUrl('catalog', 'product', 'view')){
		// 	$this->getRedirectResult('/product-not-found');
		// }
		// if($this->isUrl('catalog', 'product', 'view')){
		// 	$this->getRedirectResult('/product-not-found');
		// }

        // if($this->isUrl('catalog', 'category', 'view')){
        //     $this->getRedirectResult('/category-not-found');
        // }
//		foreach($array as $key => $value){
//		    switch($value){
//		        case 'something':
//		              echo 'then do this';
//		              break;
//		        default:
//		              echo 'else do something else';
//		    }
//		}
//
//		switch ($this->isUrl($moduleName, $controllerName, $actionName)) {
//		    case "red":
//		        echo "Your favorite color is red!";
//		        break;
//		    case "blue":
//		        echo "Your favorite color is blue!";
//		        break;
//		    case "green":
//		        echo "Your favorite color is green!";
//		        break;
//		    default:
//		        echo "Your favorite color is neither red, blue, nor green!";
//		}
//		if ($request->getModuleName() == '') {
//
//		}
//		$moduleName = 'cms';
//		$controllerName = 'index';
//		$actionName = 'index';
//		$request
//			->setModuleName($moduleName)
//			->setControllerName($controllerName)
//			->setActionName($actionName);
		// return false;
	}
}